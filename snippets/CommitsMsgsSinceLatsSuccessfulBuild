node('master') {
  pastBuilds = []
  getAllBuildsSinceLastSuccess(pastBuilds, currentBuild);
  def changeLog = getChangeLog(pastBuilds)
  echo "changeLog ${changeLog}"
}

def getAllBuildsSinceLastSuccess(pastBuilds, build) {
  if ((build != null) && (build.result != 'SUCCESS')) {
      pastBuilds.add(build)
      getAllBuildsSinceLastSuccess(pastBuilds, build.getPreviousBuild())
   }
}

@NonCPS
def getChangeLog(pastBuilds) {
    def log = ""
    for (int x = 0; x < pastBuilds.size(); x++) {
        for (int i = 0; i < pastBuilds[x].changeSets.size(); i++) {
            def entries = pastBuilds[x].changeSets[i].items
            for (int j = 0; j < entries.length; j++) {
                def entry = entries[j]
                log += "* ${entry.msg} by ${entry.author} \n"
            }
        }
    }
    return log;
}
